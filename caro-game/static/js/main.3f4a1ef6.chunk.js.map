{"version":3,"sources":["components/Square.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Square","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","isX","_this2","react_default","a","createElement","className","onClick","props","Component","Game","xIsNext","history","squares","Array","fill","stepNumber","step","setState","i","slice","length","calculateWinner","concat","current","Square_Square","handleClick","line","index","_line$index","slicedToArray","b","c","status","_this3","winner","moves","map","move","desc","key","jumpTo","renderSquare","App","Game_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f4a1ef6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './styles/Square.css'\nexport default class Square extends Component {\n    constructor(){\n        super();\n        this.state = {\n            value: ' ',\n            isX: true\n        }\n    }\n  render() {\n      const  { isX }  = this.state;\n    return (\n      <button className=\"square\"\n        onClick={ () => this.props.onClick() }\n      >\n        { this.props.value }\n      </button>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Square from './Square';\n\nexport default class Game extends Component {\n    constructor() {\n        super();\n        this.state = {\n            xIsNext: true,\n            history: [{\n                squares: Array(9).fill(null)\n            }],\n            stepNumber: 0\n        }\n    }\n    jumpTo(step){\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        })\n    }\n    handleClick(i) {\n        const { xIsNext } = this.state;\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        if (this.calculateWinner(squares) || squares[i]) return;\n\n        squares[i] = xIsNext ? 'X' : 'O';\n\n        this.setState({\n            squares: squares,\n            history: history.concat([{\n                squares: squares\n            }]),\n            xIsNext: !xIsNext,\n            stepNumber: history.length\n        });\n    }\n    renderSquare(i) {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        return <Square\n            value={current.squares[i]}\n            onClick={() => this.handleClick(i)}\n        />\n    }\n    calculateWinner(squares) {\n        const line = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n        ];\n        for (let index = 0; index < line.length; index++) {\n            const [a, b, c] = line[index];\n            if (squares[a] && squares[a] == squares[b] && squares[a] == squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = this.calculateWinner(current.squares);\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to ' + move :\n                'Go to game start';\n            return (\n                <button key={move} onClick={() => this.jumpTo(move)}>{desc}</button>\n            )\n        });\n\n        let status;\n        if (winner) {\n            status = `Winner : Player ${winner}`;\n        }\n        else {\n            status = `Next Player : ${this.state.xIsNext ? 'X' : 'O'}`;\n        }\n\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n                <div className=\"moves\">{moves}</div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Game className=\"Game\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  window.location.hostname === '[::1]' ||\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}